BEGIN TRANSACTION;
CREATE TABLE clients (
client_name text not null primary key);
INSERT INTO "clients" VALUES('bcbsma');
INSERT INTO "clients" VALUES('bcbsma2');
INSERT INTO "clients" VALUES('amfc');
INSERT INTO "clients" VALUES('bcbsfl');

CREATE TABLE releases (
r_id text not null primary key,
release text,
client_name text references clients);

INSERT INTO "releases" VALUES('bcbsmar5','r5','bcbsma');
INSERT INTO "releases" VALUES('bcbsma2r5','r5','bcbsma2');
INSERT INTO "releases" VALUES('bcbsmar5.1','r5.1','bcbsma');
INSERT INTO "releases" VALUES('amfcr10','r10','amfc');

CREATE TABLE buildconfig(
r_id text references releases(r_id),
build_no int,
build_artifact text);
INSERT INTO "buildconfig" VALUES('bcbsmar5',1,'buildartifactname.tar');
INSERT INTO "buildconfig" VALUES('amfcr10',1,'buildartifactname.tar');
INSERT INTO "buildconfig" VALUES('bcbsmar5',2,'buildartifactname.tar');


for client table
-----------
client_name
-----------
bcbsma     
bcbsma2    
amfc       
bcbsfl  



for releases table
----------------------------------
r_id        release     client_name
----------  ----------  -----------
bcbsmar5    r5          bcbsma     
bcbsma2r5   r5          bcbsma2    
bcbsmar5.1  r5.1        bcbsma    
amfcr10     r10         amfc

for buildconfig table
--------------------------------------------
r_id        build_no    build_artifact       
----------  ----------  ---------------------
bcbsmar5    1           buildartifactname.tar
amfcr10     1           buildartifactname.tar
bcbsmar5    2           buildartifactname.tar


creating table
------------------------------------------------
create table if not exists releaseinfo(
Id text not null primary key,
Client_name text default none,
Module text default none,
Release_id text default none,
Build_no int default 0,
Artifact_name text default none);

import pdb;pdb.set_trace()
def sqlite3_init():
    global db_connection
    global cursor
    db_connection=sqlite3.connect('buildfinal.db')
    cursor=db_connection.cursor
    create_database()

def create_database():
    sql='create table if not exists releaseinfo(
Id text not null primary key,
Client_name text default none,
Module text default none,
Release_id text default none,
Build_no int default 0,
Artifact_name text default none)'
    cursor.execute(sql)
    db_connection.commit()

